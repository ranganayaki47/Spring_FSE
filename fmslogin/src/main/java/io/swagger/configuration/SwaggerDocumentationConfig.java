package io.swagger.configuration;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.List;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import springfox.documentation.service.Parameter;
import springfox.documentation.builders.ApiInfoBuilder;
import springfox.documentation.builders.ParameterBuilder;
import springfox.documentation.builders.RequestHandlerSelectors;
import springfox.documentation.schema.ModelRef;
import springfox.documentation.service.ApiInfo;
import springfox.documentation.service.Contact;
import springfox.documentation.spi.DocumentationType;
import springfox.documentation.spring.web.plugins.Docket;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-01-22T18:02:22.909+05:30[Asia/Calcutta]")
@Configuration
public class SwaggerDocumentationConfig {

    ApiInfo apiInfo() {
        return new ApiInfoBuilder()
            .title("FeedBack Management system")
            .description("No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)")
            .license("")
            .licenseUrl("http://unlicense.org")
            .termsOfServiceUrl("")
            .version("1.0.0")
            .contact(new Contact("","", ""))
            .build();
    }

    @Bean
    public Docket customImplementation(){
    	
    	ParameterBuilder paramBuilder = new ParameterBuilder();
    	List<Parameter> params = new ArrayList<>();
    	paramBuilder.name("Authorization").modelRef(new ModelRef("string"))
    	.parameterType("header")
    	.required(false)
    	.build();
    	params.add(paramBuilder.build());
    	
        return new Docket(DocumentationType.SWAGGER_2)
        		//.globalOperationParameters(params)
                .select()
                    .apis(RequestHandlerSelectors.basePackage("com.fms.api"))
                    .build()
                .directModelSubstitute(java.time.LocalDate.class, java.sql.Date.class)
                .directModelSubstitute(java.time.OffsetDateTime.class, java.util.Date.class)
                .apiInfo(apiInfo());
              //  .consumes(new HashSet<String>(Arrays.asList("application/json")))
    		//	.produces(new HashSet<String>(Arrays.asList("application/json")));
    }

}
