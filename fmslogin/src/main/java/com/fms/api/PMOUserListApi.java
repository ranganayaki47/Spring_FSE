/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.16).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.fms.api;

import java.util.Optional;

import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.fms.entity.DashBoard;
import com.fms.entity.PMOUser;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-01-22T18:02:22.909+05:30[Asia/Calcutta]")
@Api(value = "pmouser", description = "the pmo user API")
@CrossOrigin("http://localhost:3000")
public interface PMOUserListApi {

    Logger log = LoggerFactory.getLogger(PMOUserListApi.class);

    default Optional<ObjectMapper> getObjectMapper(){
        return Optional.empty();
    }

    default Optional<HttpServletRequest> getRequest(){
        return Optional.empty();
    }

    default Optional<String> getAcceptHeader() {
        return getRequest().map(r -> r.getHeader("Accept"));
    }

    @ApiOperation(value = "", nickname = "pmouser", notes = "get list of pmo user", response = PMOUser.class, tags={ "fms login", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "role assigned successfully", response = PMOUser.class),
        @ApiResponse(code = 404, message = "No user found") })
    @RequestMapping(value = "/getpmouser",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default  Flux<ResponseEntity<PMOUser>> getPMOUser() {
        
                try {
                   return Flux.just(new ResponseEntity<>(getObjectMapper().get().readValue("{\r\n  \"firstName\" : \"firstName\",\r\n  \"lastName\" : \"lastName\",\r\n  \"emailId\" : \"emailId\"}", PMOUser.class), HttpStatus.NOT_IMPLEMENTED));
                } catch (Exception e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return Flux.just(new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR));
                }
            
    }

}
